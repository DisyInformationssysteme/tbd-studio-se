<%@ jet
imports="
        java.util.Map
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.process.INode
        org.talend.core.model.process.ElementParameterParser
        org.talend.designer.bigdata.di.components.thbase.THbaseConnection
        org.talend.designer.bigdata.di.components.thbase.THbaseTable
        org.talend.designer.bigdata.di.components.thbase.THBaseConfiguration
        "
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/Log4jFileUtil.javajet"%>
<%
    THbaseTable thbase = new THbaseTable((CodeGeneratorArgument) argument);
    THBaseConfiguration tHBaseConfiguration = new THBaseConfiguration();
    String cid = thbase.getCid();
    INode node = thbase.getNode();

    log4jFileUtil.componentStartInfo(thbase.getNode());

   if(!thbase.isUseExistingConnection()){
 %>
     <%@ include file="@{org.talend.designer.components.bigdata}/components/templates/HBase/CreateHBaseConnection.javajet"%>
 <% } else { %>
 org.apache.hadoop.hbase.client.Connection connection_<%=cid%> = (org.apache.hadoop.hbase.client.Connection) globalMap.get("connection_<%=thbase.getExistingConnection()%>");
 <% } %>

 resourceMap.put("connection_<%=cid%>", connection_<%=cid%>);

int nb_line_<%=cid%> = 0;

//set familyParametersList
java.util.List<java.util.Map<String, String>> familyParameters = new java.util.ArrayList();
java.util.Map map = new java.util.HashMap();
<%
for (Map map: thbase.getFamilyParameters()){
    for (Map.Entry<String, Integer> entry : (Iterable<Map.Entry<String, Integer>>) map.entrySet()) {
%>
        map.put("<%=entry.getKey()%>",<%=entry.getValue()%>);
<%
     } %>
     familyParameters.add(map);
<% }
%>

// table action
org.talend.bigdata.core.di.components.hbase.ImmutableTHbaseTable
.builder()
.connection(connection_<%=cid%>)
.namespaceName(<%=thbase.getNamespace()%>)
.tableName(<%=thbase.getTableName()%>)
.tableAction("<%=thbase.getTableAction()%>")
.addAllFamilyParameters(familyParameters)
                    .createTableFunction(((tableName, admin, family)->{
                        <% if (thbase.isHBase2x()){ %>
                            org.apache.hadoop.hbase.client.TableDescriptorBuilder tableDesBuilder =
                                       org.apache.hadoop.hbase.client.TableDescriptorBuilder.newBuilder(tableName);
                            tableDesBuilder.setColumnFamily(family);
                            org.apache.hadoop.hbase.client.TableDescriptor tableDes = tableDesBuilder.build();
                            admin.createTable(tableDes);
                       <% } else { %>
                            org.apache.hadoop.hbase.client.HTableDescriptor tableDes =
                                        new org.apache.hadoop.hbase.client.HTableDescriptor(tableName);
                            tableDes.addFamily(family);
                            admin.createTable(tableDes);
                       <% } %>

                    }))
.build()
.doTableAction();

// close hbase connection
<%
if(!thbase.isUseExistingConnection()){
%>
    connection_<%=cid%>.close();
    resourceMap.put("finish_<%=cid%>", true);
<%
}
%>
globalMap.put("<%=cid%>_NB_LINE",nb_line_<%=cid%>);

<%
log4jFileUtil.writeDataFinishInfo(thbase.getNode());
%>