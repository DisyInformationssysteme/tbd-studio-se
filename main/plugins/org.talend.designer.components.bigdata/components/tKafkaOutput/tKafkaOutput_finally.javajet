<%@ jet
    imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.HashMap
" 
%>

<%@ include file="@{org.talend.designer.components.bigdata}/components/tKafkaConnection/tSetKeystore_util.javajet"%>
<%@ include file="@{org.talend.designer.components.bigdata}/components/tKafkaOutput/tKafkaOutput_util.javajet"%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
TKafkaOutputUtil tKafkaOutputUtil = new TKafkaOutputUtil(node);
%>

<%
if (tKafkaOutputUtil.useProducerRecord()) {
%>
    org.apache.kafka.clients.producer.KafkaProducer<Object, Object> <%=cid%>_kafkaProducerToClose = (org.apache.kafka.clients.producer.KafkaProducer<Object, Object>) globalMap.get("<%=cid%>_kafkaProducer");
<%
} else {
%>
    org.apache.kafka.clients.producer.KafkaProducer<byte[], byte[]> <%=cid%>_kafkaProducerToClose = (org.apache.kafka.clients.producer.KafkaProducer<byte[], byte[]>) globalMap.get("<%=cid%>_kafkaProducer");
<%
}
%>

if(null != <%=cid%>_kafkaProducerToClose) {
    <%=cid%>_kafkaProducerToClose.close();
    globalMap.remove("<%=cid%>_kafkaProducer");
}
